users
    * user_id
    * username
    * email
    * password
    * profile_img
    * about
    * is_admin

    CREATE TABLE users(
        user_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
        username VARCHAR(120) NOT NULL UNIQUE,
        email VARCHAR(252) NOT NULL UNIQUE,
        password VARCHAR(255) NOT NULL,
        profile_img VARCHAR(120),
        about VARCHAR(400),
        is_admin BOOLEAN UNSIGNED NOT NULL DEFAULT 0,
        created_at TIMESTAMP NOT NULL
    );


categories
    * category_id
    * category_name

    CREATE TABLE categories(
        category_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
        category_name VARCHAR(64)
    );
    

articles
    * article_id
    * title
    * content
    * article_quote
    * main_img
    * second_img
    * second_img_caption
    * user_id
    * category_id
    * created_at

    CREATE TABLE articles(
        article_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
        title VARCHAR(200) NOT NULL,
        content TEXT NOT NULL,
        article_img VARCHAR(120) NOT NULL,
        user_id INT UNSIGNED NOT NULL,
        category_id INT UNSIGNED NOT NULL,
        created_at TIMESTAMP NOT NULL,

        FOREIGN KEY(user_id) REFERENCES users(user_id),
        FOREIGN KEY(category_id) REFERENCES categories(category_id)
    );


comments 
    * comment_id
    * article_id
    * comment_content
    * comment_date
    * user_id
    * parent_id

    CREATE TABLE comments(
        comment_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
        article_id INT UNSIGNED NOT NULL,
        comment_content TEXT NOT NULL,
        comment_date TIMESTAMP NOT NULL,
        user_id INT UNSIGNED NOT NULL,
        parent_id INT UNSIGNED NOT NULL DEFAULT 0,

        FOREIGN KEY(article_id) REFERENCES articles(article_id),
        FOREIGN KEY(user_id) REFERENCES users(user_id),
        FOREIGN KEY(parent_id) REFERENCES comments(comment_id)
    );

    